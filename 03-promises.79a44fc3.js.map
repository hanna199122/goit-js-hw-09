{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAM3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CAZbR,EAAKgB,iBAAiB,UAgBtB,SAA8BC,GAC5BA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOjB,EAAWkB,OAC1BC,EAASF,OAAOf,EAAYgB,OAC5BE,EAAOH,OAAOhB,EAAUiB,OAE5B,IAAK,IAAIG,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDC,QAAQC,IAAIF,GAEZlB,EAAckB,EAAUL,GACrBQ,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA9B,GAAS+B,OAAOC,QACd,sBAAoBvB,QAAiBC,MAAU,IAGlDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA9B,GAAS+B,OAAOG,QAAQ,oBAAkBzB,QAAeC,MAAU,IAGzEiB,QAAQC,IAAIP,EAAOI,EAAMD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector(\"input[name='delay']\");\nconst inputStep = document.querySelector(\"input[name='step']\");\nconst inputAmount = document.querySelector(\"input[name='amount']\");\n\n// console.log(inputAmount);\n\nform.addEventListener('submit', onFormCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormCreatePromises(evt) {\n  evt.preventDefault();\n  let delay = Number(inputDelay.value);\n  let amount = Number(inputAmount.value);\n  let step = Number(inputStep.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    console.log(position);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfield promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Reject promise ${position} in ${delay}ms`);\n      });\n  }\n  console.log(delay, step, amount);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","amount","step","position1","console","log","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.79a44fc3.js.map"}